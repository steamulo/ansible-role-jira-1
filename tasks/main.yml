- name: create group Jira
  group:
    name: "{{ jira_user }}"
    state: present

- name: create user Jira
  user:
    name: "{{ jira_user }}"
    group: "{{ jira_user }}"

- name: prepare directories
  file:
    path: "{{ item }}"
    owner: "{{ jira_user }}"
    group: "{{ jira_user }}"
    mode: "0755"
    state: "directory"
  with_items:
    - "{{ jira_home }}"
    - "{{ jira_install }}"

- name: download package
  get_url:
    url: "{{ jira_url }}"
    dest: "/tmp/{{ jira_archive }}"
    checksum: "{{ jira_checksum }}"

- name: unarchive package
  shell: |
    tar zxvf /tmp/{{ jira_archive }} -C {{ jira_install }} --strip-components=1
    chown -Rf {{ jira_user }}:{{ jira_user }} {{ jira_install }}
  args:
    creates: "{{ jira_install }}/bin/start-jira.sh"
  notify: restart jira

- name: download mysql-connector package
  get_url:
    url: "{{ jira_mysql_connector_url }}"
    dest: "/tmp/{{ jira_mysql_connector_archive }}"
    checksum: "{{ jira_mysql_connector_checksum }}"

- name: unarchive mysql-connector package
  shell: |
    tar zxvf /tmp/{{ jira_mysql_connector_archive }} -C {{ jira_install }}/lib --strip-components=1
    chmod 0444 {{ jira_install }}/lib/mysql-connector-java-{{ jira_mysql_connector_version }}.jar
    chown {{ jira_user }}:{{ jira_user }} {{ jira_install }}/lib/mysql-connector-java-{{ jira_mysql_connector_version }}.jar
  args:
    creates: "{{ jira_install }}/lib/mysql-connector-java-{{ jira_mysql_connector_version }}.jar"
  notify: restart jira

- name: Create systemd unit file
  template:
    src: jira.service.j2
    dest: /etc/systemd/system/jira.service
    owner: root
    group: root
    mode: 0744

- name: Create server config file
  template:
    src: server.xml.j2
    dest: "{{ jira_installÂ }}/conf/server.xml"
    owner: "{{ jira_user }}"
    group: "{{ jira_user }}"
    mode: 0444

- name: enable service
  service:
    name: "jira"
    enabled: "yes"
  notify: restart jira
